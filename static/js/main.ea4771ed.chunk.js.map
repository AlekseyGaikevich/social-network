{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/users/users.module.css","components/Profile/Profile.module.css","serviceWorker.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/users/Users.jsx","components/users/UsersContainer.jsx","App.js","index.js","components/Dialogs/Dialogs.module.css"],"names":["module","exports","nav","item","a","activeLink","postsBlock","posts","header","discriptionBlock","userPhoto","Boolean","window","location","hostname","match","initialState","id","message","likesCount","newPostText","profileReducer","state","arguments","length","undefined","action","type","newPost","Object","objectSpread","concat","toConsumableArray","newText","dialogs","name","messages","newMessageBody","dialogsReducer","body","sidebarReducer","users","usersReducer","map","u","userID","followed","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","store","createStore","Header","react_default","createElement","className","s","src","Navbar","react_router_dom","to","activeClassName","Post","props","MyPosts","postsElements","p","MyPosts_Post_Post","newPostElement","React","createRef","onChange","text","current","value","updateNewPostText","ref","onClick","addPost","MyPostsContainer","connect","dispatch","updateNewTextActionCreator","ProfileInfo","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","DialogItem","path","dialog","active","Message","Dialogs","dialogsElements","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","dialogsItems","e","target","updateNewMessageBody","placeholder","sendMessage","DialogsContainer","updateNewMessageBodyCreator","Users","setUsers","photoURL","fullName","status","city","country","styles","unfollow","follow","userId","setUsersAC","App","components_Header_Header","components_Navbar_Navbar","react_router","render","Dialogs_DialogsContainer","components_Profile_Profile","UsersContainer","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea4771ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__Wxjpr\",\"item\":\"Navbar_item__2I-ty\",\"a\":\"Navbar_a__3bpcg\",\"activeLink\":\"Navbar_activeLink__V9yNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__28s54\",\"posts\":\"MyPosts_posts__31sS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__17-Tj\",\"item\":\"Header_item__1FSB1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3_S4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__1Xyxl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2SooR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Profile_item__Uf_NP\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi! How are you?', likesCount: 0 },\r\n        { id: 2, message: \"It's my first post\", likesCount: 23 },\r\n    ],\r\n    newPostText: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        };\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return { \r\n                ...state,\r\n                newPostText: action.newText\r\n             };\r\n        }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const addPostActionCreator = () => ({ type: ADD_POST });\r\nexport const updateNewTextActionCreator = (text) =>\r\n    ({ type: UPDATE_NEW_POST_TEXT, newText: text });\r\n\r\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Lesha' },\r\n        { id: 2, name: 'Katya' },\r\n        { id: 3, name: 'Misha' },\r\n        { id: 4, name: 'Zhenya' },\r\n        { id: 5, name: 'Dima' }\r\n    ],\r\n\r\n    messages: [\r\n        { id: 1, message: 'Hi!' },\r\n        { id: 2, message: 'How are you?' },\r\n        { id: 3, message: 'All ok!' },\r\n        { id: 4, message: 'Yo' },\r\n        { id: 5, message: 'Yo!' },\r\n    ],\r\n    newMessageBody: \"\"\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: \"\",\r\n                messages: [...state.messages, { id: 6, message: body }]\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const sendMessageCreator = () => ({ type: SEND_MESSAGE });\r\nexport const updateNewMessageBodyCreator = (body) =>\r\n    ({ type: UPDATE_NEW_MESSAGE_BODY, body: body });\r\n\r\nexport default dialogsReducer;","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\n\r\nlet initialState = {\r\n    users: [ ]\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return { ...state, users: [...state.users, ...action.users] }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const followAC = (userID) => ({ type: FOLLOW, userID });\r\nexport const unfollowAC = (userID) => ({ type: UNFOLLOW, userID });\r\nexport const setUsersAC = (users) => ({ type: SET_USERS, users });\r\n\r\nexport default usersReducer;","import { createStore, combineReducers } from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n    </header>;\r\n    }\r\n\r\nexport default Header; ","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={s.nav} >\r\n      <div className={s.item}>\r\n        <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n      </div>\r\n      <div className={'${s.item} ${s.active}'}>\r\n        <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>News</a>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>Music</a>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>Settings</a>\r\n      </div>\r\n    </nav >\r\n  )\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://whatsism.com/uploads/posts/2018-07/1530545833_il2zmvzx9py.jpg' />\r\n      {props.message}\r\n      <div>\r\n        <span>Likes {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Post; ","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements =\r\n    props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = () => {\r\n    props.addPost();\r\n  };\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.updateNewPostText(text);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <div>\r\n          <textarea onChange={onPostChange} ref={newPostElement}\r\n            value={props.newPostText} />\r\n        </div>\r\n        <div>\r\n          <button onClick={onAddPost}>Add post</button>\r\n        </div>\r\n      </div>\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default MyPosts; ","import React from 'react';\r\nimport { addPostActionCreator, updateNewTextActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateNewPostText: (text) => {\r\n      let action = updateNewTextActionCreator(text);\r\n      dispatch(action);\r\n    },\r\n    addPost: () => {\r\n      dispatch(addPostActionCreator());\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer; ","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileInfo = () => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src='https://www.w3schools.com/howto/img_snow.jpg' />\r\n      </div>\r\n      <div className = {s.discriptionBlock}>\r\n        ava + discription\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo; ","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile; ","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + '' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>;\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage()\r\n    }\r\n\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea\r\n                            value={newMessageBody}\r\n                            onChange={onNewMessageChange}\r\n                            placeholder=\"Enter your message\">\r\n                        </textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageClick}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { updateNewMessageBodyCreator, sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageBody: (body) => {            \r\n            dispatch(updateNewMessageBodyCreator(body))           \r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator())\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport styles from './users.module.css';\r\nconst Users = (props) => {\r\n\r\n    if (props.users.length === 0) {\r\n        props.setUsers(\r\n            [\r\n                { id: 1, photoURL: 'https://cdn.shopify.com/s/files/1/1061/1924/files/Nerd_with_Glasses_Emoji.png?6135488989279264585', followed: false, fullName: 'Alex', status: 'Blablabla', location: { city: 'Minsk', country: 'Belarus' } },\r\n                { id: 2, photoURL: 'https://cdn.shopify.com/s/files/1/1061/1924/files/Nerd_with_Glasses_Emoji.png?6135488989279264585', followed: true, fullName: 'Katya', status: 'Yyoyoyo', location: { city: 'Warsaw', country: 'Poland' } },\r\n                { id: 3, photoURL: 'https://cdn.shopify.com/s/files/1/1061/1924/files/Nerd_with_Glasses_Emoji.png?6135488989279264585', followed: true, fullName: 'Zhenya', status: 'AaAaAaAa', location: { city: 'Kiev', country: 'Ukraine' } },\r\n                { id: 4, photoURL: 'https://cdn.shopify.com/s/files/1/1061/1924/files/Nerd_with_Glasses_Emoji.png?6135488989279264585', followed: false, fullName: 'Sergey', status: 'UuUuUuUu', location: { city: 'Riga', country: 'Latvia' } },\r\n            ]\r\n        );\r\n    };\r\n\r\n\r\n    return <div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <img src={u.photoURL} className={styles.userPhoto} />\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button onClick={() => { props.unfollow(u.id) }}>UnFollow</button>\r\n                            : <button onClick={() => { props.follow(u.id) }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.fullName}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{u.location.country}</div>\r\n                        <div>{u.location.city}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport Users from './Users';\r\nimport { connect } from 'react-redux';\r\nimport { followAC, unfollowAC, setUsersAC } from '../../redux/users-reducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport UsersContainer from './components/users/UsersContainer';\n\nconst App = (props) => {\n  return (\n    <BrowserRouter>\n      <div className='app-wrapper'>\n        <Header />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Route path='/dialogs'\n            render={() => <DialogsContainer />} />\n          <Route path='/profile'\n            render={() => <Profile />} />\n          <Route path='/users'\n            render={() => <UsersContainer /> } />\n        </div>\n      </div>;\n    </BrowserRouter>)\n}\n\nexport default App;","import * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n        <BrowserRouter>\n                <Provider store={store}>\n                        <App />\n                </Provider>\n        </BrowserRouter>, document.getElementById('root'));\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__JOYKC\",\"dialogsItems\":\"Dialogs_dialogsItems__1xyBp\",\"active\":\"Dialogs_active__KK4sm\",\"messages\":\"Dialogs_messages__3tzlz\",\"message\":\"Dialogs_message__2F5bO\"};"],"sourceRoot":""}